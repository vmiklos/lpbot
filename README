= IRC bot
Miklos Vajna <vmiklos@vmiklos.hu>

== Specification

=== Functions

My aim is to create an IRC bot, with the following minimal features:

* automatic parallel connections to multiple servers, and to multiple
  channels within a server, automatic reconnect on network errors

* authentication of users (with password and/or using services available
  on the network)

* implementation of a simple wiki-like database, users with sufficient
  privileges can create records (storing creation and modification time
  for each record, storing old versions as well)

* controlling the bot via a tcp port: users with sufficient privileges
  can connect to the bot using a utility program and can control it to
  execute given commands (for example connect to a new server if the bot
  is not connected to any server)

* other extra nice features: RSS reader (announces the link of new
  entries to a given channel), sending forgotten password via e-mail.

=== Papers

* the IRC bot itself (`lpbot`), ran by the administrator

* the utility controller program (`lpbotctl`), run by the users with
  sufficent privileges

* administrator guide

* user guide

* developer guide

== Implemented features

* automatic parallel connect to multiple servers
* automatic join to multiple channels, if the connect was successful
* automatic reconnect on network error (ping timeout, read/write error)

* commands are available via the public channel (via highlight) or in a
  private query as well

* `identify` command, it requires no more parameters in case using
  services, or requires one password parameter if configured to use
  password authentication

* `db` command, it has 3 subcommands: `db get title` to query an
  existing record, `db put title text here` to insert a new record or
  update an existing one and `db del title` to delete a record.

* the bot binds to port 1100 and you can access the commands via telnet
  as well (the syntax is `<login> PRIVMSG master <command>`)

// vim: ft=asciidoc
